{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f81bbb55-3609-4982-b7e3-e2f4e76a9cc0",
   "metadata": {},
   "source": [
    "# length "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "957c26c0-7191-4450-9f7b-f9bbb46afbce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n"
     ]
    }
   ],
   "source": [
    "thing='jamal'\n",
    "print(len(thing))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84c27a5f-4c43-457a-a17f-2d5850ee7b16",
   "metadata": {},
   "source": [
    "# loop through strings "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "664548a7-c481-4c73-8b99-d36df3e02fc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 m\n",
      "1 a\n",
      "2 n\n",
      "3 g\n",
      "4 o\n"
     ]
    }
   ],
   "source": [
    "fruit='mango'\n",
    "index=0\n",
    "while index<len(fruit):\n",
    " letter=fruit[index]\n",
    " print(index,letter)\n",
    " index=index+1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd5fb0ba-f112-4777-b960-af996c05b44d",
   "metadata": {},
   "source": [
    "# for loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c8bde176-f2bb-46ea-b8e3-bb481bbb72d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mango\n",
      "mango\n",
      "mango\n",
      "mango\n",
      "mango\n"
     ]
    }
   ],
   "source": [
    "fruit='mango'\n",
    "for letter in fruit:\n",
    " print(fruit)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "77ed5d6b-415d-4b0d-8705-f13846bba4b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m\n",
      "a\n",
      "n\n",
      "g\n",
      "o\n"
     ]
    }
   ],
   "source": [
    "fruit='mango'\n",
    "index=0\n",
    "letter=fruit[index]\n",
    "for index in (fruit):\n",
    " print(index)\n",
    " \n",
    " \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8481559-a662-4603-ba5a-02d316eefacc",
   "metadata": {},
   "source": [
    "# string slicing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "921cf6d1-1f1c-42d4-bfd5-c31be3756e51",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hf\n",
      "hf\n",
      "ffhf\n"
     ]
    }
   ],
   "source": [
    "jk='ffhf'\n",
    "print(jk[2:4])\n",
    "print(jk[2:])\n",
    "print(jk[:4])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9e51d270-1d48-46e4-84f3-c0ebb4dca3ff",
   "metadata": {},
   "source": [
    "# in as logic op"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "4d3ff928-bc75-468b-8398-21943bb3b151",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fruit='mango'\n",
    "'n' in fruit\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3950388b-8fde-4033-8f3b-9bebf326bf99",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "found it\n"
     ]
    }
   ],
   "source": [
    "fruit='mango'\n",
    "if 'a' in fruit:\n",
    "    print('found it')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f1c472d2-ec61-41dc-a2c1-2e951659f2ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['__add__',\n",
       " '__class__',\n",
       " '__contains__',\n",
       " '__delattr__',\n",
       " '__dir__',\n",
       " '__doc__',\n",
       " '__eq__',\n",
       " '__format__',\n",
       " '__ge__',\n",
       " '__getattribute__',\n",
       " '__getitem__',\n",
       " '__getnewargs__',\n",
       " '__getstate__',\n",
       " '__gt__',\n",
       " '__hash__',\n",
       " '__init__',\n",
       " '__init_subclass__',\n",
       " '__iter__',\n",
       " '__le__',\n",
       " '__len__',\n",
       " '__lt__',\n",
       " '__mod__',\n",
       " '__mul__',\n",
       " '__ne__',\n",
       " '__new__',\n",
       " '__reduce__',\n",
       " '__reduce_ex__',\n",
       " '__repr__',\n",
       " '__rmod__',\n",
       " '__rmul__',\n",
       " '__setattr__',\n",
       " '__sizeof__',\n",
       " '__str__',\n",
       " '__subclasshook__',\n",
       " 'capitalize',\n",
       " 'casefold',\n",
       " 'center',\n",
       " 'count',\n",
       " 'encode',\n",
       " 'endswith',\n",
       " 'expandtabs',\n",
       " 'find',\n",
       " 'format',\n",
       " 'format_map',\n",
       " 'index',\n",
       " 'isalnum',\n",
       " 'isalpha',\n",
       " 'isascii',\n",
       " 'isdecimal',\n",
       " 'isdigit',\n",
       " 'isidentifier',\n",
       " 'islower',\n",
       " 'isnumeric',\n",
       " 'isprintable',\n",
       " 'isspace',\n",
       " 'istitle',\n",
       " 'isupper',\n",
       " 'join',\n",
       " 'ljust',\n",
       " 'lower',\n",
       " 'lstrip',\n",
       " 'maketrans',\n",
       " 'partition',\n",
       " 'removeprefix',\n",
       " 'removesuffix',\n",
       " 'replace',\n",
       " 'rfind',\n",
       " 'rindex',\n",
       " 'rjust',\n",
       " 'rpartition',\n",
       " 'rsplit',\n",
       " 'rstrip',\n",
       " 'split',\n",
       " 'splitlines',\n",
       " 'startswith',\n",
       " 'strip',\n",
       " 'swapcase',\n",
       " 'title',\n",
       " 'translate',\n",
       " 'upper',\n",
       " 'zfill']"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stuff='hello world'\n",
    "type(stuff)\n",
    "dir(stuff)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7ea1ea8b-a447-4a07-9763-49c15d6a6fbc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
